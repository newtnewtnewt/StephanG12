
Iteration 2 is over. Iteration 3 is in full swing. 
*   Present your proposed testing plan to the Customer.  They will evaluate your plan and must agree/sign off on what they want. This must include \
  A list of all unit tests you plan on performing.

      	Unit Tests: 


        Checking that each page exists(Moderation, Comments, Landing)


        Checking that each page loads(Moderation, Comments, Landing)

    *   All your integration tests (integrating two components at a time)

        Selenium runs through login with all users, and takes all possible actions according to each user’s capabilities.


        Tests adding and removing comments


        Tests submitting and accepting/denying applications


        Tests login 


        **It works! It’s running**

    *   All your system tests. 
    *   Who will be doing white box, grey box, and black box testing? How?  
        *   Create at least 10 test cases. However, more are better. You will have to implement the tests eventually, but for now just describe them. Include at least
        *   3 White Box (End user) tests **(Noah & Craig) (In NUnit)**
        *   3 Grey Box Tests** (Noah & Craig) (In NUnit)**
        *   3 Black Box Tests -** Done by Craig(In Selenium)**
*   Allow the customer to run/test your build scripts. They will evaluate how complete/automatic they are. 
*   As this is the second last customer meeting, have the customer tell you the final feature list they REQUIRE by the time of your last customer meeting. 
    *   Propose something to them (which they will evaluate), but let them decide 

        Admins having the ability to remove apps from the App Store 

*   Show the customer your documentation plan and initial documentation. 
    *   Who will be doing 
    *   1)developer documentation (Noah)
    *   2) User/in application documentation?   (Pushti, Sara, Keegan)

        **Documentation for User/in application:**

*   A user can download Appgregate. 
*   A user can run the Appgregate without any initial permissions.
*   A user can access a login page.
*   A user can  insert a username and password into two text boxes to login to an account.
*   A user’s password will be encrypted within a text file.
*   A user can see the app store in the GUI without logging in, in an unsorted order upon booting the program.
*   A user can  see text in the GUI without logging in  above each respective data entry with the corresponding column name for that data entry(I.E the “Name” will be displayed above the application name in the graphic interface)
*   A user can view the name of the application on the GUI without logging in, in the row corresponding to the application.
*   A user can view the description of the application on the GUI without logging in, in the row corresponding to the application.
*   A user can view the respective organization of the application on the GUI without logging in  in the row corresponding to the application.
*   A user can view the platform(s) of the application on the GUI without logging in, in the row corresponding to the application.
*   A user can view the versions(s) of the application on the GUI without logging in, in the row corresponding to the application.
*   A user can view the out of 5 star rating of the application on the GUI without logging in, in the row corresponding to the application.
*   A user can view a “view comments” button on the GUI without logging in, in the row corresponding to the application.
*   A user can view the application information in each row in the GUI according to the following order: name, description, organization, platform(s), version(s), out of 5 rating.
*   A user can single click on any column header in the GUI to sort that column in ascending order for all columns.
*   A user can single click on any column header in the GUI for a list already sorted in ascending order to sort that list by that column in descending order.
*   A user can double click any column header in the GUI, without logging in, for a search bar to appear.
*   A user can type text on column headers in the GUI, without logging in,  that have been double clicked in order to filter by criteria respective of that column.
*   A user will have access in the GUI without login in to a search bar that can be clicked on in order to type words in.
*   A user can filter across all columns based on the text present in the persistent search bar.

**In application documentation**

**Logging in: **
1. From the home page, click “Log in”
2. From the log in page, enter in your email and password, and hit submit
3. You will be redirected to the home page logged in

**Registering:**

1. From the home page, click “register”
2. From the register page, enter in an email, password, and confirm the password.
3. You will be redirected to the home page logged in

**Viewing Apps:**

1. From the home page, all the apps will be listed

**Sorting Apps:**


1. From the home page, click the criteria you want to sort (Name, Description, Organization, Platforms, Versions, or Ratings)
2. The application list will return sorted to the criteria you selected

**Searching Apps:**


1. From the home page, enter in a keyword you want to search for
2. The app list will update based on the keyword entered

**Viewing Comments:**

1. From the homepage, find an app you want to view comments for
2. On that apps row, click the “View Comments” button
3. You will be redirected to the comments for that app

**Adding Comments:**

1. From the home page, while logged in, find an app you want to add a comment for
2. On that apps row, click the “View Comments” button
3. You will be redirected to the comments for that app
4. In the textbox provided, add your comment
5. OPTIONAL, Next to the text box, select a rating you want to give the app
6. Hit submit, and the comment will be added

**Rating Apps:**

1. From the home page, while logged in, find an app you want to add a comment for
2. On that apps row, click the “View Comments” button
3. You will be redirected to the comments for that app
4. Next to the text box, select a rating you want to give the app
5. OPTIONAL, in the text box, add a comment for the app
6. Hit submit, and the rating will be added

**Deleting Comments(Moderator or Admin only): **
1. From the homepage, find an app you want to view comments for
2. On that apps row, click the “View Comments” button
3. You will be redirected to the comments for that app
4. Select the comment you wish to delete, and press “Remove”
5. The comment section will update without that comment

**Submitting App Requests:**
1. From the home page, select “Submit App Request”
2. Fill out the text boxes with the information for you app
3. Once submitted, an Admin will process your request

**Accepting/Rejecting App Request(Moderator or Admin only):**


1. From the home page, select “Accept/Reject App Request”
2. From the app requests page, find the app you want to accept or reject
3. In that apps row, click “Accept” or “Reject” 
4. You will be redirected to the homepage, with the app in the list if accepted or not if rejected
    *   How will it be realized? Where will it go and what form will it be in. 

        **The program will go on the server and it will be in the form of a web application. The documentation will be stored in two separate PDFs.  **

*   Show the customer your completed Iteration 2 features/items for their approval. 
*   Don't forget your agendas for next meeting!

Week 8th

*   You will show each of your completed (agreed upon features) to the customer in detail, who will then evaluate their satisfaction of those features based on the following rubric
    *   (-0) - Completed Satisfied
    *   (-1) - Somewhat Satisfied
    *   (-2) - Not Satisfied 
*   Go over the results of your 10+ test cases with the customer in detail. Customer will evaluate their satisfaction of them.
*   Confirm with the customer that you will email them and me your projects by Friday end of day (11:59pm). 

<!-- Docs to Markdown version 1.0β17 -->
